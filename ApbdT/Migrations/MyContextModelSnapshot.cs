// <auto-generated />
using System;
using ApbdT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApbdT.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApbdT.Models.Character", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("characters");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CurrentWeight = 12,
                            FirstName = "Dmytro",
                            LastName = "Armianishyn",
                            MaxWeight = 60
                        },
                        new
                        {
                            id = 2,
                            CurrentWeight = 11,
                            FirstName = "Nikita",
                            LastName = "Bogdan",
                            MaxWeight = 59
                        });
                });

            modelBuilder.Entity("ApbdT.Models.CharacterTitels", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("TitelsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterId", "TitelsId");

                    b.HasIndex("TitelsId");

                    b.ToTable("Character_titels");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            TitelsId = 1,
                            AcquiredAt = new DateTime(2021, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CharacterId = 2,
                            TitelsId = 2,
                            AcquiredAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApbdT.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Chokolate",
                            Weight = 2
                        },
                        new
                        {
                            id = 2,
                            Name = "Water",
                            Weight = 1
                        });
                });

            modelBuilder.Entity("ApbdT.Models.Titles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("titles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Title-1"
                        },
                        new
                        {
                            id = 2,
                            Name = "Title-2"
                        });
                });

            modelBuilder.Entity("Apbd_kolos2.Models.Backpacks", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("backpacks");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            ItemId = 1,
                            Amount = 11
                        },
                        new
                        {
                            CharacterId = 2,
                            ItemId = 2,
                            Amount = 8
                        });
                });

            modelBuilder.Entity("ApbdT.Models.CharacterTitels", b =>
                {
                    b.HasOne("ApbdT.Models.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApbdT.Models.Titles", "Title")
                        .WithMany("Backpacks")
                        .HasForeignKey("TitelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Apbd_kolos2.Models.Backpacks", b =>
                {
                    b.HasOne("ApbdT.Models.Character", "Character")
                        .WithMany("Backpacks")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApbdT.Models.Item", "Item")
                        .WithMany("Backpacks")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ApbdT.Models.Character", b =>
                {
                    b.Navigation("Backpacks");
                });

            modelBuilder.Entity("ApbdT.Models.Item", b =>
                {
                    b.Navigation("Backpacks");
                });

            modelBuilder.Entity("ApbdT.Models.Titles", b =>
                {
                    b.Navigation("Backpacks");
                });
#pragma warning restore 612, 618
        }
    }
}
